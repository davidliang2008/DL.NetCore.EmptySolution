// <auto-generated />
using System;
using DL.NetCore.EmptySolution.Data.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DL.NetCore.EmptySolution.Data.EFCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200815001334_AddSelfReferenceWorkPackageTable")]
    partial class AddSelfReferenceWorkPackageTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DL.NetCore.EmptySolution.Data.EFCore.Entities.WorkPackageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("WorkPackage");
                });

            modelBuilder.Entity("DL.NetCore.EmptySolution.Domain.SocialRelationship.Entities.Extrovert", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Education")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Extrovert");
                });

            modelBuilder.Entity("DL.NetCore.EmptySolution.Domain.SocialRelationship.Entities.ExtrovertFriendship", b =>
                {
                    b.Property<string>("ExtrovertId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ExtrovertFriendId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ExtrovertId", "ExtrovertFriendId");

                    b.HasIndex("ExtrovertFriendId");

                    b.ToTable("ExtrovertFriendship");
                });

            modelBuilder.Entity("DL.NetCore.EmptySolution.Data.EFCore.Entities.WorkPackageEntity", b =>
                {
                    b.HasOne("DL.NetCore.EmptySolution.Data.EFCore.Entities.WorkPackageEntity", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DL.NetCore.EmptySolution.Domain.SocialRelationship.Entities.ExtrovertFriendship", b =>
                {
                    b.HasOne("DL.NetCore.EmptySolution.Domain.SocialRelationship.Entities.Extrovert", "ExtrovertFriend")
                        .WithMany("FriendsOf")
                        .HasForeignKey("ExtrovertFriendId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DL.NetCore.EmptySolution.Domain.SocialRelationship.Entities.Extrovert", "Extrovert")
                        .WithMany("Friends")
                        .HasForeignKey("ExtrovertId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
